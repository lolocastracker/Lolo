# --- Setup ---
# Use a specific, lightweight Node.js version for reproducibility
FROM node:14-alpine

# Set the working directory inside the container
WORKDIR /app


# --- Dependency Caching & Installation ---
# Copy package manifests first. This layer is cached and only re-runs
# if these specific files change.
COPY ./react/package.json ./
COPY ./react/package-lock.json ./
COPY ./react/semantic.json ./

# Use 'npm ci' for a faster, more reliable build from the lock file
RUN npm ci


# --- Application Code ---
# Copy the rest of your application's source code into the container
COPY ./react .


# --- Security & Permissions ---
# Create a dedicated, non-root user and group for running the application
RUN addgroup --system app && adduser --system --ingroup app app

# Change the ownership of all application files to the new user
RUN chown -R app:app /app

# Switch to the non-root user for all subsequent commands
USER app


# --- Execution ---
# Expose the port the React development server runs on
EXPOSE 3000

# Set the default command to run the application.
# This will be executed as the 'app' user.
CMD [ "npm", "start" ]