version: '3.6'
services:
  #backend services
  map:
     container_name: map
     image: 127.0.0.1:5000/backend
     build:
       context: .
       dockerfile: ./Dockerfiles/backend
     volumes:
       - ./map:/target
       - ./env:/env
     command:  /wait-for-it.sh -t 200 db:3306 -- gunicorn --workers 1 --bind 0.0.0.0:5000 --chdir ./target server:app
     networks:
      - my-overlay 
  comm:
     container_name: comm
     image: 127.0.0.1:5000/backend
     volumes:
       - ./comm:/target
       - ./env:/env
     command:  /wait-for-it.sh -t 200 db:3306 -- gunicorn --workers 1 --bind 0.0.0.0:5000 --chdir ./target server:app
     networks:
      - my-overlay  
  user:  
    container_name: user
    image: 127.0.0.1:5000/backend
    restart: always
    volumes:
       - ./user:/target
       - ./env:/env
    command:  /wait-for-it.sh -t 200 db:3306 -- gunicorn --workers 1 --bind 0.0.0.0:5000 --chdir ./target server:app
    networks:
      - my-overlay
#frontend   
  react:
    container_name: react
    image: 127.0.0.1:5000/react
    restart: always
    build:
        context: .
        dockerfile: ./Dockerfiles/react
    volumes:
      - ./react:/target
    command: npm start --prefix target
    networks:
      - my-overlay
 # Passwords
  keycloak:
    container_name: keycloak
    restart: always   
    image: 127.0.0.1:5000/ivanfranchin/keycloak-clustered:latest
    build:
      context: .
      dockerfile: ./Dockerfiles/keycloak
    ports:
      - 8090:8443
    environment:
    # - KEYCLOAK_USER=admin
    # - KEYCLOAK_PASSWORD=admin
    - DB_VENDOR=mysql
    - DB_ADDR=db
    - DB_USER=${DB_USER}
    - DB_PASSWORD=${DB_PASSWORD}
    - DB_PORT=3306
    - DB_DATABASE=${DB_NAME}
    - KEYCLOAK_IMPORT=/tmp/key.json
    volumes:
     - ./keycloak:/tmp
    networks:
      - my-overlay
networks:
  my-overlay:
    external: true
       
networks:
    my-overlay:
      external: true
      driver: overlay
 

  




